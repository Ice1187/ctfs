from Crypto.Util.number import inverse
from gmpy2 import iroot
from os import popen


def part1():
    n = 142274132019463
    e = 65537
    ct = 24717805320749

    # from factordb.com
    p = 10140301
    q = 14030563
    r = (p-1)*(q-1)
    d = inverse(e, r)
    m = pow(ct, d, n)
    print(m)


def part2():
    n = 24180889994220035849990569801246120034467624907553370907381583139842140133102592525387125182308286761937103981270036572402169420569668949147993057414924745631675948358899727819876986458559678424360659328168657508655198218938886875674694758462453190696840439030907481435683744747745066898986186103641179740472107942870406421600916341473342059402467371285072639636342361003725892022500880843471865773454201403842707244798353808065273407624654685803413908515141274936327359544597938807436620905922799944642027756273237950364430345294275567992736041429570096894410769029803161896424533453444448368977766005352289326853589
    e = 3
    ct = 26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125

    # ref: https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_e_attack/
    k = 0
    isInt = False
    while not isInt:
        m_cube = ct + k*n
        m, isInt = iroot(m_cube, 3)
    print(m)


def part3():
    n = 45818338876334528045623862859793611856620603889257643343098485242657708420725171866753241624685044027339184450575717045143758794792150202650827693205761071854147446341047284534147339089995537263511623301841121713818461861610716769442802060478236252405109823612643662054256305373704590423420048851685077244861
    e = 65537
    ct = 13273257901471463337938881685761968213328432371425297523199090640461288220210050635964720313730042507037796940370704102173732744934210122941822915964958167782716428213825001783265395852795506477139588789725728781826083436494478964508054119665618444933116758237190582249559277120463004788188345446992358036769

    m = popen('/opt/RsaCtfTool/RsaCtfTool.py -n 45818338876334528045623862859793611856620603889257643343098485242657708420725171866753241624685044027339184450575717045143758794792150202650827693205761071854147446341047284534147339089995537263511623301841121713818461861610716769442802060478236252405109823612643662054256305373704590423420048851685077244861 -e 65537 --uncipher 13273257901471463337938881685761968213328432371425297523199090640461288220210050635964720313730042507037796940370704102173732744934210122941822915964958167782716428213825001783265395852795506477139588789725728781826083436494478964508054119665618444933116758237190582249559277120463004788188345446992358036769').read().strip()
    m = m[m.find('INT (big endian) : '):]
    m = m[:m.find('\n')]
    print(m)


part1()
part2()
part3()
